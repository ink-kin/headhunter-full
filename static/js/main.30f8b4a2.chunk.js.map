{"version":3,"sources":["api/index.js","redux/actions/auth.js","components/Header.jsx","redux/actions/utils.js","components/sidebar/Sidebar.jsx","components/vacancies/Modal.jsx","redux/actions/vacancies.js","components/vacancies/vacancy/Vacancy.jsx","components/AlertCustom.jsx","components/vacancies/List.jsx","components/search/ComponentSearch.jsx","redux/actions/userInfo.js","components/search/ComponentExperience.jsx","components/search/ComponentCity.jsx","components/search/ComponentSalary.jsx","components/search/ModalSearch.jsx","components/sidebar/ListResume.jsx","components/sidebar/ModalResume.jsx","components/Loader.jsx","components/Content.jsx","components/Footer.jsx","App.js","redux/reducers/vacancies.js","redux/reducers/utils.js","redux/reducers/auth.js","redux/reducers/userInfo.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["handleSuccess","response","handleError","error","message","getVacancies","a","textSearch","areaId","countItemsOnPage","currentPage","experience","salary","query","axios","get","url_api_hh","res","data","getTokenBackend","method","url","url_backend","headers","getVacancy","id","accessToken","Authorization","getUserInfo","getUserResume","sendResume","vacancyId","resumeId","disconnect","this","interceptors","use","setAccessToken","createAction","setUserInfo","setUserResume","setUserActiveResume","Wrapper","styled","div","LinkCustom","Header","useSelector","state","reducerAuth","isAuth","userInfo","orientation","first_name","last_name","href","HomeFilled","setCountItemsOnPage","changePage","setIsOpenModalSearch","setIsOpenModalResume","toggleOpenAlertResume","setFirstLoaded","ButtonSearch","button","Information","Title","h3","SubTitle","h5","List","ul","Item","li","ItemBase","span","ItemResponse","ButtonResume","Sidebar","snippetVacancies","reducerVacancies","reducerUserInfo","city","activeResume","dispatch","useDispatch","onClick","isOpenModalSearch","found","title","validateExperience","isOpenModalResume","Modal","time","item","published_at","formatDistanceToNow","Date","name","dangerouslySetInnerHTML","__html","description","fetchSnippetVacanciesRequest","fetchSnippetVacanciesSuccess","fetchSnippetVacanciesFailure","validateSalary","fetchFullVacanciesRequest","fetchFullVacanciesSuccess","fetchFullVacanciesFailure","sendUserResumeRequest","sendUserResumeFailure","ItemMain","ItemInfo","ItemSidebar","CompanyLink","SalaryText","myColor","ButtonSendResume","Button","Vacancy","handleEmptyData","arg","renderRelations","relations","color","className","queries","console","log","isOpenAlertResume","setTimeout","err","sendUserResumeApi","disabled","target","length","slice","salaryFrom","salaryTo","salaryCurrency","renderSalary","employer","company","renderCompany","AlertWrapper","Alert","AlertCustom","isShow","text","type","showIcon","ListWparrer","ItemWrapper","refList","useRef","refItem","useState","itemHeight","setItemHeight","fullVacancies","reducerUtils","optionsModalHover","index","followCursor","shiftX","shiftY","useEffect","current","count","Math","trunc","clientHeight","ref","map","key","options","Trigger","Hover","InputForm","Input","ComponentSearch","textValue","setTextValue","placeholder","value","onChange","e","changeCity","changeExperience","changeSalary","ButtonExperience","Radio","ComponentExperience","style","margin","Group","defaultValue","size","ComponentCity","isChangeCity","setIsChangeCity","handleChangeCity","marginRight","InputWrapper","Subtitle","ComponentSalary","isChangeSalary","setIsChangeSalary","handleChangeSalary","ModalSearch","firstLoadedApp","fetchSnippetVacancies","isLoadingData","fetchSnippetVacanciesApi","fetchFullVacancies","arrayIds","items","forEach","push","vacancy","shift","fetchFullVacanciesApi","handleSubmit","toggleSettings","visible","centered","onOk","onCancel","footer","isActive","Info","h2","ListResume","resume","shape","src","photo","checked","ModalResume","WrapperSpin","DataIsLoaded","children","isLoading","Content","PaginationApp","Pagination","Footer","defaultCurrent","showSizeChanger","total","pageSize","App","resUserInfo","fetchUserInfoApi","resResume","fetchUserResumeApi","resTokenBackend","handleActions","payload","firstLoaded","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30f8b4a2.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { message } from 'antd';\r\n\r\n// TODO НУЖНО ДОБАВИТЬ ИНТЕРЦЕПТОРС ДЛЯ ОТПРВКИ accessToken\r\n\r\nclass Queries {\r\n  constructor() {\r\n    this.url_api_hh = 'https://api.hh.ru';\r\n    this.url_backend = 'http://localhost:8080';\r\n    axios.interceptors.response.use(this.handleSuccess, this.handleError);\r\n  }\r\n\r\n  handleSuccess = (response) => {\r\n    return response;\r\n  };\r\n\r\n  handleError = (error) => {\r\n    if (error.message === 'Network Error' && !error.response) {\r\n      message.error('Сетевая ошибка');\r\n    }\r\n\r\n    if (error.message === 'Request failed with status code 500') {\r\n      message.error('Сервер не отвечает');\r\n    }\r\n  };\r\n  /* Получение всех вакансий с краткой информ. */\r\n  getVacancies = async ({\r\n    textSearch = '',\r\n    areaId = 1,\r\n    countItemsOnPage,\r\n    currentPage = 1,\r\n    experience = '',\r\n    salary,\r\n  }) => {\r\n    const query = `text=${textSearch}&area=${areaId}&per_page=${countItemsOnPage}&page=${\r\n      currentPage - 1\r\n    }${experience}${salary}`;\r\n    const res = await axios.get(`${this.url_api_hh}/vacancies?${query}`);\r\n    return res.data;\r\n  };\r\n  getTokenBackend = async () => {\r\n    const res = await axios({\r\n      method: 'get',\r\n      url: `${this.url_backend}/auth-hh`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    return res.data;\r\n  };\r\n  /* Получение одной вакансии с полной информ. */\r\n  getVacancy = async ({ id, accessToken }) => {\r\n    let res;\r\n\r\n    if (accessToken !== null) {\r\n      res = await axios({\r\n        method: 'get',\r\n        url: `${this.url_api_hh}/vacancies/${id}`,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      });\r\n      return res.data;\r\n    }\r\n    res = await axios({\r\n      method: 'get',\r\n      url: `${this.url_api_hh}/vacancies/${id}`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    return res.data;\r\n  };\r\n\r\n  getUserInfo = async ({ accessToken }) => {\r\n    let res;\r\n    if (accessToken !== null) {\r\n      res = await axios({\r\n        method: 'get',\r\n        url: `${this.url_api_hh}/me`,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      });\r\n      return res.data;\r\n    }\r\n    res = await axios({\r\n      method: 'get',\r\n      url: `${this.url_api_hh}/me`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    return res.data;\r\n  };\r\n\r\n  getUserResume = async ({ accessToken }) => {\r\n    let res;\r\n\r\n    if (accessToken !== null) {\r\n      res = await axios({\r\n        method: 'get',\r\n        url: `${this.url_api_hh}/resumes/mine`,\r\n\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      });\r\n      return res.data;\r\n    }\r\n    res = await axios({\r\n      method: 'get',\r\n      url: `${this.url_api_hh}/resumes/mine`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    return res.data;\r\n  };\r\n\r\n  sendResume = async ({ accessToken, vacancyId, resumeId }) => {\r\n    const query = `vacancy_id=${vacancyId}&resume_id=${resumeId}`;\r\n    let res;\r\n\r\n    if (accessToken !== null) {\r\n      res = await axios({\r\n        method: 'post',\r\n        url: `${this.url_api_hh}/negotiations?${query}`,\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      });\r\n      return res.data;\r\n    }\r\n\r\n    res = await axios({\r\n      method: 'post',\r\n      url: `${this.url_api_hh}/negotiations?${query}`,\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return res;\r\n  };\r\n\r\n  disconnect = async () => {\r\n    await axios({\r\n      method: 'get',\r\n      url: `${this.url_backend}/disconnect`,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n  };\r\n}\r\n\r\nexport default new Queries();\r\n","import { createAction } from 'redux-actions';\r\nimport queries from '../../api/index';\r\n\r\nexport const setAccessToken = createAction('SET_ACCESS_TOKEN');\r\nexport const setUserInfo = createAction('SET_USER_INFO');\r\nexport const setUserResume = createAction('SET_USER_RESUME');\r\nexport const setUserActiveResume = createAction('SET_USER_ACTIVE_RESUME');\r\n\r\n/* TOOD ДОПИСАТЬ REQUEST SUCCESS FAILURE  для экшенов ниже!!!! */\r\n\r\nexport const checkAuthUserApi = () => async (dispatch) => {\r\n  try {\r\n    const resTokenBackend = await queries.getTokenBackend();\r\n    if (resTokenBackend) {\r\n      dispatch(setAccessToken({ accessToken: resTokenBackend.accessToken }));\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const fetchUserInfoApi = ({ accessToken }) => async (dispatch) => {\r\n  try {\r\n    const resUserInfo = await queries.getUserInfo({\r\n      accessToken,\r\n    });\r\n    dispatch(setUserInfo({ userInfo: resUserInfo, isAuth: true }));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const fetchUserResumeApi = ({ accessToken }) => async (dispatch) => {\r\n  try {\r\n    const resResume = await queries.getUserResume({\r\n      accessToken,\r\n    });\r\n    dispatch(setUserResume({ resume: resResume }));\r\n    dispatch(setUserActiveResume({ activeResume: resResume.items[0] }));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Divider } from 'antd';\r\nimport { HomeFilled } from '@ant-design/icons';\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 100vw;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst LinkCustom = styled.a`\r\n  & *:not(:last-child) {\r\n    margin-right: 4px;\r\n  }\r\n`;\r\n\r\nconst LINK_LOGIN_HH =\r\n  'https://hh.ru/oauth/authorize?response_type=code&client_id=VFV0TMH6A9FJQV8USEMPTMM98PGRTGI6KBIG6N820L25U937H6UMSVUOMQV3RF5D';\r\n\r\nexport const Header = () => {\r\n  const { isAuth, userInfo } = useSelector((state) => state.reducerAuth);\r\n\r\n  const renderUsername = () => {\r\n    return isAuth ? (\r\n      <span>\r\n        {userInfo.first_name} {userInfo.last_name}\r\n      </span>\r\n    ) : (\r\n      <LinkCustom href={LINK_LOGIN_HH}>\r\n        <HomeFilled />\r\n        <span>Sign in</span>\r\n      </LinkCustom>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Divider orientation=\"right\">{renderUsername()}</Divider>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import { createAction } from 'redux-actions';\r\n\r\nexport const setCountItemsOnPage = createAction('SET_COUNT_ITEMS_ON_PAGE');\r\nexport const changePage = createAction('CHANGE_PAGE');\r\n\r\nexport const setIsOpenModalSearch = createAction('SET_IS_TOGGLE_MODAL_SEARCH');\r\nexport const setIsOpenModalResume = createAction('SET_IS_TOGGLE_MODAL_RESUME');\r\nexport const toggleOpenAlertResume = createAction('SET_IS_TOGGLE_ALERT_RESUME');\r\nexport const setFirstLoaded = createAction('SET_FIRST_LOADED');\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  setIsOpenModalSearch,\r\n  setIsOpenModalResume,\r\n} from '../../redux/actions/utils';\r\n\r\nconst Wrapper = styled.div`\r\n  border-radius: 5px;\r\n  width: 250px;\r\n`;\r\nconst ButtonSearch = styled.button`\r\n  width: 100%;\r\n  height: 30px;\r\n  background-color: #1890ff;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  border: none;\r\n  border-top-left-radius: 5px;\r\n  border-top-right-radius: 5px;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: #1890ffe8;\r\n  }\r\n`;\r\nconst Information = styled.div`\r\n  padding: 8px;\r\n`;\r\nconst Title = styled.h3``;\r\nconst SubTitle = styled.h5`\r\n  color: red;\r\n`;\r\nconst List = styled.ul`\r\n  margin: 0;\r\n`;\r\nconst Item = styled.li`\r\n  font-weight: 500;\r\n`;\r\nconst ItemBase = styled.span``;\r\nconst ItemResponse = styled.span`\r\n  margin-left: 6px;\r\n`;\r\n\r\nconst ButtonResume = styled.button`\r\n  width: 100%;\r\n  height: 30px;\r\n  background-color: #1890ff;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  border: none;\r\n  border-top-left-radius: 5px;\r\n  border-top-right-radius: 5px;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: #1890ffe8;\r\n  }\r\n`;\r\n\r\nexport const Sidebar = () => {\r\n  const { snippetVacancies } = useSelector((state) => state.reducerVacancies);\r\n  const { city, experience, salary } = useSelector(\r\n    (state) => state.reducerUserInfo\r\n  );\r\n  const { activeResume } = useSelector((state) => state.reducerAuth);\r\n  const dispatch = useDispatch();\r\n\r\n  const validateExperience = (experience) => {\r\n    switch (experience) {\r\n      case 1:\r\n        return 'Не имеет значения';\r\n      case 2:\r\n        return 'Нет опыта';\r\n      case 3:\r\n        return 'От 1 года до 3 лет';\r\n      case 4:\r\n        return 'От 3 до 6 лет';\r\n      default:\r\n        return 'Не имеет значения';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ButtonSearch\r\n        onClick={() =>\r\n          dispatch(setIsOpenModalSearch({ isOpenModalSearch: true }))\r\n        }\r\n      >\r\n        Поиск\r\n      </ButtonSearch>\r\n      <Information>\r\n        <Title>Информация поиска:</Title>\r\n\r\n        <List>\r\n          <Item>\r\n            <ItemBase>Найдено вакансий:</ItemBase>\r\n            <ItemResponse>{snippetVacancies.found}</ItemResponse>\r\n          </Item>\r\n          <Item>\r\n            <ItemBase>Город:</ItemBase>\r\n            <ItemResponse>{city.title}</ItemResponse>\r\n          </Item>\r\n          <Item>\r\n            <ItemBase>Зарплата:</ItemBase>\r\n            <ItemResponse>\r\n              {salary === null || salary === '' ? 'Не важно' : salary + ' руб'}\r\n            </ItemResponse>\r\n          </Item>\r\n          <Item>\r\n            <ItemBase>Опыт:</ItemBase>\r\n            <ItemResponse>{validateExperience(experience)}</ItemResponse>\r\n          </Item>\r\n        </List>\r\n      </Information>\r\n      <ButtonResume\r\n        onClick={() =>\r\n          dispatch(setIsOpenModalResume({ isOpenModalResume: true }))\r\n        }\r\n      >\r\n        Выбрать резюме\r\n      </ButtonResume>\r\n      <Information>\r\n        <Title>Активное резюме:</Title>\r\n        <List>\r\n          <Item>\r\n            <ItemBase>\r\n              {activeResume ? activeResume.title : 'Не выбрано'}\r\n            </ItemBase>\r\n            <SubTitle>\r\n              {activeResume ? 'будет отправляться на вакансии' : null}\r\n            </SubTitle>\r\n          </Item>\r\n        </List>\r\n      </Information>\r\n      <Information>\r\n        <Title>Дополнительно:</Title>\r\n        <List>\r\n          <Item>\r\n            <ItemBase>Этот раздел в разработке</ItemBase>\r\n          </Item>\r\n          <Item>\r\n            <ItemBase>Новые вакансии за неделю</ItemBase>\r\n          </Item>\r\n        </List>\r\n      </Information>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { formatDistanceToNow } from 'date-fns';\r\n\r\nconst Wrapper = styled.div`\r\n  z-index: 10;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  padding: 4px;\r\n  font-size: 14px;\r\n  -webkit-line-clamp: 30; /* Число отображаемых строк */\r\n  display: -webkit-box; /* Включаем флексбоксы */\r\n  -webkit-box-orient: vertical; /* Вертикальная ориентация */\r\n  overflow: hidden; /* Обрезаем всё за пределами блока */\r\n  max-height: 70%;\r\n  border: 1px solid #000;\r\n  margin-right: 16px;\r\n`;\r\n\r\nconst renderTimePublished = (time) => {\r\n  return `${formatDistanceToNow(new Date(time))} назад. `;\r\n};\r\n\r\nconst renderExperience = (experience) => {\r\n  return `Требуемый опыт работы: ${experience}.  `;\r\n};\r\n\r\nexport const Modal = ({ item }) => {\r\n  return (\r\n    <Wrapper>\r\n      <span>\r\n        Вакансия опубликована {renderTimePublished(item.published_at)}\r\n      </span>\r\n      <span>{renderExperience(item.experience.name)}</span>\r\n      <hr />\r\n      <div\r\n        dangerouslySetInnerHTML={{\r\n          __html: item.description,\r\n        }}\r\n      ></div>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import { createAction } from 'redux-actions';\r\nimport queries from '../../api/index';\r\nimport { toggleOpenAlertResume } from './utils';\r\n\r\nexport const fetchSnippetVacanciesRequest = createAction(\r\n  'FETCH_SNIPPET_VACANCIES_REQUEST'\r\n);\r\nexport const fetchSnippetVacanciesSuccess = createAction(\r\n  'FETCH_SNIPPET_VACANCIES_SUCCESS'\r\n);\r\nexport const fetchSnippetVacanciesFailure = createAction(\r\n  'FETCH_SNIPPET_VACANCIES_FAILURE'\r\n);\r\n\r\n/* Опыт работы */\r\n\r\nconst validateExperience = (experience) => {\r\n  switch (experience) {\r\n    case 1:\r\n      return '';\r\n    case 2:\r\n      return '&experience=noExperience';\r\n    case 3:\r\n      return '&experience=between1And3';\r\n    case 4:\r\n      return '&experience=between3And6';\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\nconst validateSalary = (salary) => {\r\n  if (salary === null || salary === '') {\r\n    return '';\r\n  }\r\n  return `&salary=${salary}&only_with_salary=true`;\r\n};\r\n\r\nexport const fetchSnippetVacanciesApi = ({\r\n  accessToken,\r\n  textSearch,\r\n  areaId,\r\n  countItemsOnPage,\r\n  currentPage,\r\n  experience,\r\n  salary,\r\n}) => async (dispatch) => {\r\n  dispatch(fetchSnippetVacanciesRequest({ isLoadingData: true }));\r\n  try {\r\n    /* Получаем краткое описание вакансий */\r\n    const snippetVacancies = await queries.getVacancies({\r\n      accessToken,\r\n      textSearch,\r\n      areaId,\r\n      countItemsOnPage,\r\n      currentPage,\r\n      experience: validateExperience(experience),\r\n      salary: validateSalary(salary),\r\n    });\r\n    dispatch(\r\n      fetchSnippetVacanciesSuccess({ snippetVacancies, isLoadingData: false })\r\n    );\r\n  } catch (err) {\r\n    dispatch(fetchSnippetVacanciesFailure({ isLoadingData: false }));\r\n  }\r\n};\r\n\r\nexport const fetchFullVacanciesRequest = createAction(\r\n  'FETCH_FULL_VACANCIES_REQUEST'\r\n);\r\nexport const fetchFullVacanciesSuccess = createAction(\r\n  'FETCH_FULL_VACANCIES_SUCCESS'\r\n);\r\nexport const fetchFullVacanciesFailure = createAction(\r\n  'FETCH_FULL_VACANCIES_FAILURE'\r\n);\r\n\r\nexport const fetchFullVacanciesApi = ({\r\n  snippetVacancies,\r\n  accessToken,\r\n}) => async (dispatch) => {\r\n  dispatch(fetchFullVacanciesRequest({ isLoadingData: true }));\r\n  try {\r\n    let arrayIds = [];\r\n    /* Получаем все id вакансий из краткого описания вакансий (snippetVacancies) */\r\n    await snippetVacancies.items.forEach((item) => arrayIds.push(item.id));\r\n\r\n    const fullVacancies = [];\r\n    /* Отправляем запрос по каждой id чтобы получить описане полной вакансии */\r\n    await arrayIds.forEach(async (id, index) => {\r\n      const vacancy = await queries.getVacancy({ id,accessToken });\r\n      await fullVacancies.push(vacancy);\r\n      await arrayIds.shift();\r\n      if (0 === arrayIds.length) {\r\n        dispatch(\r\n          fetchFullVacanciesSuccess({\r\n            fullVacancies,\r\n            isLoadingData: false,\r\n            accessToken,\r\n          })\r\n        );\r\n      }\r\n    });\r\n  } catch (err) {\r\n    dispatch(fetchFullVacanciesFailure({ isLoadingData: false }));\r\n  }\r\n};\r\n\r\nexport const sendUserResumeRequest = createAction('SEND_RESUME_REQUEST');\r\nexport const sendUserResumeSuccess = createAction('SEND_RESUME_SUCCESS');\r\nexport const sendUserResumeFailure = createAction('SEND_RESUME_FAILURE');\r\n\r\nexport const sendUserResumeApi = ({\r\n  accessToken,\r\n  vacancyId,\r\n  resumeId,\r\n}) => async (dispatch) => {\r\n  dispatch(sendUserResumeRequest());\r\n  try {\r\n    const res = queries.sendResume({ accessToken, vacancyId, resumeId });\r\n    console.log(res);\r\n    dispatch(toggleOpenAlertResume({ isOpenAlertResume: true }));\r\n    setTimeout(() => {\r\n      dispatch(toggleOpenAlertResume({ isOpenAlertResume: false }));\r\n    }, 1000);\r\n  } catch (err) {\r\n    dispatch(sendUserResumeFailure());\r\n  }\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { sendUserResumeApi } from '../../../redux/actions/vacancies';\r\n\r\nimport { Button } from 'antd';\r\n\r\nconst Item = styled.div`\r\n  display: flex;\r\n  align-items: column;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst ItemMain = styled.div`\r\n  display: flex;  \r\n  align-items: center;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst ItemInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: space-between;\r\n  justify-content: center;\r\n  width: 260px;\r\n  @media (max-width: 1400px) {\r\n    width: 220px;\r\n  }\r\n`;\r\n\r\nconst ItemSidebar = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst CompanyLink = styled.a`\r\n  color: #6193e8;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  @media (max-width: 1400px) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst SalaryText = styled.span`\r\n  color: #86888c;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  @media (max-width: 1400px) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.a`\r\n  margin: 6px 0 0 6px;\r\n  color: ${({ myColor }) => myColor};\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  transition: 0.7s;\r\n\r\n  &:hover {\r\n    color: #1890ff;\r\n  }\r\n\r\n  @media (max-width: 1400px) {\r\n    font-size: 14px;\r\n    margin: 0 0 0 6px;\r\n  }\r\n`;\r\n\r\nconst ButtonSendResume = styled(Button)`\r\n  display: none;\r\n  margin: 6px 0 0 6px;\r\n  @media (max-width: 1400px) {\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport const Vacancy = ({ item }) => {\r\n  const { activeResume, accessToken } = useSelector(\r\n    (state) => state.reducerAuth\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSendResume = () => {\r\n    dispatch(\r\n      sendUserResumeApi({\r\n        accessToken,\r\n        vacancyId: item.id,\r\n        resumeId: activeResume.id,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleEmptyData = (data, arg) => (data && data[arg]) || null;\r\n\r\n  const renderSalary = (salary) => {\r\n    let res = '';\r\n    const salaryFrom = handleEmptyData(salary, 'from');\r\n    const salaryTo = handleEmptyData(salary, 'to');\r\n    const salaryCurrency = handleEmptyData(salary, 'currency');\r\n    if (salaryFrom) {\r\n      res += `от ${salaryFrom} `;\r\n    }\r\n    if (salaryTo) {\r\n      res += `до ${salaryTo} `;\r\n    }\r\n    if (salaryCurrency) {\r\n      res += `${salaryCurrency}`;\r\n    }\r\n    return res === '' ? 'Не указана' : res;\r\n  };\r\n\r\n  const renderCompany = (item) => {\r\n    let company = null;\r\n    company = handleEmptyData(item, 'name');\r\n    if (company === null) {\r\n      return 'Не указана';\r\n    }\r\n    return company && company.length > 19\r\n      ? company.slice(0, 19) + '...'\r\n      : company;\r\n  };\r\n\r\n  const renderRelations = (relations) => {\r\n    if (relations === 'got_invitation')\r\n      return { name: ' - Пригласили', color: '#21c10e' };\r\n    if (relations === 'got_response')\r\n      return { name: ' - Откликались', color: '#115fd4' };\r\n    if (relations === 'got_rejection')\r\n      return { name: ' - Отказ', color: 'red' };\r\n    return { name: '', color: '#000' };\r\n  };\r\n\r\n  const relations = item.relations;\r\n\r\n  return (\r\n    <Item>\r\n      <ItemMain>\r\n        <ButtonSendResume\r\n          className=\"btn__send_resume\"\r\n          onClick={handleSendResume}\r\n          disabled={!!(relations && relations[0])}\r\n        >\r\n          Отправить резюме\r\n        </ButtonSendResume>\r\n        <Title\r\n          myColor={relations && renderRelations(relations[0]).color}\r\n          href={`https://spb.hh.ru/vacancy/${item.id}`}\r\n          target=\"_blank\"\r\n        >\r\n          {item.name.length > 44 ? item.name.slice(0, 44) + '...' : item.name}\r\n          {relations && renderRelations(relations[0]).name}\r\n        </Title>\r\n      </ItemMain>\r\n      <ItemSidebar>\r\n        <ItemInfo>\r\n          <SalaryText>Зарплата: {renderSalary(item.salary)}</SalaryText>\r\n          <CompanyLink\r\n            href={handleEmptyData(item.employer, 'alternate_url')}\r\n            target=\"_blank\"\r\n          >\r\n            Компания: {renderCompany(item.employer)}\r\n          </CompanyLink>\r\n        </ItemInfo>\r\n      </ItemSidebar>\r\n    </Item>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Alert } from 'antd';\r\n\r\nconst Wrapper = styled.div`\r\n  width: calc(100vw - 298px);\r\n  height: calc(100% - 100px);\r\n  position: fixed;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n  background-color: #fff;\r\n`;\r\nconst AlertWrapper = styled(Alert)`\r\n  max-width: 300px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const AlertCustom = ({ isShow, text }) => {\r\n  if (isShow) {\r\n    return (\r\n      <Wrapper>\r\n        <AlertWrapper message={text} type=\"success\" showIcon />\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n","import React, { useRef, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport ReactHover from 'react-hover';\r\nimport { setCountItemsOnPage } from '../../redux/actions/utils';\r\n\r\nimport { Modal } from './Modal';\r\nimport { Vacancy } from './vacancy/Vacancy';\r\nimport { AlertCustom } from '../AlertCustom';\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: calc(100vw - 298px);\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  /* Отстпу справа - размер sidebar */\r\n  padding-right: 250px;\r\n  margin-left: 16px;\r\n`;\r\n\r\nconst ListWparrer = styled.ul`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  list-style: none;\r\n  padding: 0 32px;\r\n  margin: 0 0 10px 0;\r\n`;\r\n\r\nconst ItemWrapper = styled.li`\r\n  width: 100%;\r\n  height: 45px;\r\n  border-bottom: 1px solid #e0d6d6;\r\n  cursor: pointer;\r\n  box-sizing: border-box;\r\n  transition: 0.7s;\r\n\r\n  &:hover {\r\n    background-color: #e4e6ef;\r\n  }\r\n  &:hover .btn__send_resume {\r\n    display: inline-block;\r\n    transition: 0.7s;\r\n  }\r\n  @media (max-width: 1400px) {\r\n    padding: 4px;\r\n    height: 40px;\r\n  }\r\n`;\r\n\r\nexport const List = () => {\r\n  const refList = useRef();\r\n  const refItem = useRef();\r\n  const [itemHeight, setItemHeight] = useState(40);\r\n  const dispatch = useDispatch();\r\n\r\n  const { fullVacancies } = useSelector((state) => state.reducerVacancies);\r\n  const { countItemsOnPage, isOpenAlertResume } = useSelector(\r\n    (state) => state.reducerUtils\r\n  );\r\n\r\n  const optionsModalHover = (index) => {\r\n    return {\r\n      followCursor: true,\r\n      shiftX: 20,\r\n      shiftY: -index * itemHeight,\r\n    };\r\n  };\r\n\r\n  const renderList = () =>\r\n    fullVacancies.map((item, index) => {\r\n      return (\r\n        <ItemWrapper key={item.id} ref={refItem}>\r\n          <ReactHover options={optionsModalHover(index)}>\r\n            <ReactHover.Trigger type=\"trigger\">\r\n              <Vacancy item={item} />\r\n            </ReactHover.Trigger>\r\n            <ReactHover.Hover type=\"hover\">\r\n              <Modal item={item} />\r\n            </ReactHover.Hover>\r\n          </ReactHover>\r\n        </ItemWrapper>\r\n      );\r\n    });\r\n\r\n  useEffect(() => {\r\n    /* Узнаем сколько поместится item на странице относительно высоты окна\r\n     */\r\n    if (refList.current && refItem.current) {\r\n      let count = Math.trunc(\r\n        refList.current.clientHeight / refItem.current.clientHeight\r\n      );\r\n      /* Максимум 21 за один запрос */\r\n      if (count > 21) {\r\n        count = 21;\r\n      }\r\n      dispatch(setCountItemsOnPage({ count }));\r\n      setItemHeight(refItem.current.clientHeight);\r\n    }\r\n  }, [countItemsOnPage, dispatch]);\r\n  return (\r\n    <Wrapper>\r\n      <ListWparrer ref={refList}>{renderList()}</ListWparrer>\r\n      <AlertCustom\r\n        isShow={isOpenAlertResume}\r\n        text=\"Резюме успешно отправлено!\"\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Input } from 'antd';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst InputForm = styled(Input)`\r\n  width: 100%;\r\n  background: none;\r\n  color: #000;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport const ComponentSearch = ({ textValue, setTextValue }) => {\r\n  return (\r\n    <Wrapper>\r\n      <InputForm\r\n        placeholder=\"Профессия, должность или компания\"\r\n        value={textValue}\r\n        onChange={(e) => setTextValue(e.target.value)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n","import { createAction } from 'redux-actions';\r\n\r\nexport const changeCity = createAction('CHANGE_CITY');\r\nexport const changeExperience = createAction('CHANGE_EXPERIENCE');\r\nexport const changeSalary = createAction('CHANGE_SALARY');\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeExperience } from '../../redux/actions/userInfo';\r\nimport { Radio } from 'antd';\r\n\r\nconst ButtonExperience = styled(Radio.Button)`\r\n  width: calc(100% / 2);\r\n  text-align: center;\r\n`;\r\n\r\nexport const ComponentExperience = () => {\r\n  const dispatch = useDispatch();\r\n  const { experience } = useSelector((state) => state.reducerUserInfo);\r\n  const onChangeExperience = (e) => {\r\n    dispatch(changeExperience({ experience: e.target.value }));\r\n  };\r\n  return (\r\n    <>\r\n      <h2 style={{ margin: '0 16px 0 0' }}>Опыт:</h2>\r\n      <Radio.Group\r\n        onChange={onChangeExperience}\r\n        value={experience}\r\n        name=\"radiogroup\"\r\n        defaultValue={1}\r\n        size=\"middle\"\r\n      >\r\n        <ButtonExperience value={1}>Не имеет значения</ButtonExperience>\r\n        <ButtonExperience value={2}>Нет опыта</ButtonExperience>\r\n        <ButtonExperience value={3}>От 1 до 3 лет</ButtonExperience>\r\n        <ButtonExperience value={4}>От 3 до 6 лет</ButtonExperience>\r\n      </Radio.Group>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeCity } from '../../redux/actions/userInfo';\r\nimport { Button } from 'antd';\r\n\r\nexport const ComponentCity = () => {\r\n  const [isChangeCity, setIsChangeCity] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const { city } = useSelector((state) => state.reducerUserInfo);\r\n\r\n  const handleChangeCity = () => setIsChangeCity(!isChangeCity);\r\n\r\n  const renderInfoCity = () => {\r\n    return (\r\n      <>\r\n        <h2 style={{ margin: 0 }}>Город поиска: {city.title} </h2>\r\n        <Button onClick={handleChangeCity}>Изменить</Button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderChangeCity = () => {\r\n    return (\r\n      <>\r\n        <div>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              const city = { title: 'Москва', areaId: 1 };\r\n              dispatch(changeCity({ city }));\r\n              handleChangeCity();\r\n            }}\r\n            style={{ marginRight: '8px' }}\r\n          >\r\n            Москва\r\n          </Button>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              const city = { title: 'Санкт-Петербург', areaId: 2 };\r\n              dispatch(changeCity({ city }));\r\n              handleChangeCity();\r\n            }}\r\n          >\r\n            Санкт-Петербург\r\n          </Button>\r\n        </div>\r\n        <Button onClick={handleChangeCity}>Назад</Button>\r\n      </>\r\n    );\r\n  };\r\n  return <> {isChangeCity ? renderChangeCity() : renderInfoCity()}</>;\r\n};\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeSalary } from '../../redux/actions/userInfo';\r\nimport { Button, Input } from 'antd';\r\n\r\nconst InputWrapper = styled.div`\r\n  width: 100%;\r\n  margin-right: 16px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst InputForm = styled(Input)`\r\n  max-width: 250px;\r\n  width: 100%;\r\n  background: none;\r\n  color: #000;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst Subtitle = styled.span`\r\n  font-size: 13px;\r\n`;\r\n\r\nexport const ComponentSalary = () => {\r\n  const [isChangeSalary, setIsChangeSalary] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const { salary } = useSelector((state) => state.reducerUserInfo);\r\n\r\n  const handleChangeSalary = () => setIsChangeSalary(!isChangeSalary);\r\n\r\n  const renderInfoSalary = () => {\r\n    return (\r\n      <>\r\n        <h2 style={{ margin: 0 }}>\r\n          Зарплата: {salary === null || salary === '' ? 'Не важно' : salary}\r\n        </h2>\r\n        <Button onClick={handleChangeSalary}>Изменить</Button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderChangeSalary = () => {\r\n    return (\r\n      <>\r\n        <InputWrapper>\r\n          <InputForm\r\n            placeholder=\"Укажите ожидаемую зарплату\"\r\n            value={salary}\r\n            onChange={(e) => dispatch(changeSalary({ salary: e.target.value }))}\r\n          />\r\n          <Subtitle>\r\n            При указании значения будут найдены вакансии, в которых вилка\r\n            зарплаты близка к указанной в запросе.\r\n          </Subtitle>\r\n        </InputWrapper>\r\n        <Button onClick={handleChangeSalary}>Назад</Button>\r\n      </>\r\n    );\r\n  };\r\n  return <>{isChangeSalary ? renderChangeSalary() : renderInfoSalary()}</>;\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  fetchSnippetVacanciesApi,\r\n  fetchFullVacanciesApi,\r\n} from '../../redux/actions/vacancies';\r\nimport {\r\n  setIsOpenModalSearch,\r\n  setFirstLoaded,\r\n} from '../../redux/actions/utils';\r\n\r\nimport { Button, Modal } from 'antd';\r\nimport { ComponentSearch } from './ComponentSearch';\r\nimport { ComponentExperience } from './ComponentExperience';\r\nimport { ComponentCity } from './ComponentCity';\r\nimport { ComponentSalary } from './ComponentSalary';\r\n\r\nconst Item = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nexport const ModalSearch = () => {\r\n  const [textValue, setTextValue] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const { snippetVacancies } = useSelector((state) => state.reducerVacancies);\r\n  const {\r\n    countItemsOnPage,\r\n    currentPage,\r\n    isOpenModalSearch,\r\n    firstLoadedApp,\r\n  } = useSelector((state) => state.reducerUtils);\r\n  const { city, experience, salary } = useSelector(\r\n    (state) => state.reducerUserInfo\r\n  );\r\n  const { accessToken } = useSelector((state) => state.reducerAuth);\r\n\r\n  const fetchSnippetVacancies = () =>\r\n    dispatch(\r\n      fetchSnippetVacanciesApi({\r\n        textSearch: textValue,\r\n        areaId: city.areaId,\r\n        countItemsOnPage,\r\n        currentPage,\r\n        experience,\r\n        salary,\r\n      })\r\n    );\r\n\r\n  const fetchFullVacancies = () =>\r\n    dispatch(fetchFullVacanciesApi({ snippetVacancies, accessToken }));\r\n\r\n  /* Когда получаем краткое описане вакансий, сразу делаем запрос за полным описанием каждой вакансии */\r\n  useEffect(() => {\r\n    snippetVacancies.length !== 0 && fetchFullVacancies();\r\n  }, [snippetVacancies]);\r\n\r\n  /* Если переходим на другую страницу */\r\n  useEffect(() => {\r\n    if (firstLoadedApp) {\r\n      fetchSnippetVacancies();\r\n    }\r\n  }, [currentPage]);\r\n\r\n  const handleSubmit = async () => {\r\n    dispatch(setFirstLoaded({ firstLoadedApp: true }));\r\n    await fetchSnippetVacancies();\r\n    await toggleSettings();\r\n  };\r\n\r\n  const toggleSettings = () => {\r\n    dispatch(setIsOpenModalSearch({ isOpenModalSearch: false }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Настройки поиска\"\r\n        visible={isOpenModalSearch}\r\n        centered={true}\r\n        onOk={toggleSettings}\r\n        onCancel={toggleSettings}\r\n        footer={[\r\n          <Button key=\"back\" onClick={toggleSettings}>\r\n            Назад\r\n          </Button>,\r\n          <Button key=\"submit\" type=\"primary\" onClick={handleSubmit}>\r\n            Поиск\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Item>\r\n          <ComponentSearch textValue={textValue} setTextValue={setTextValue} />\r\n        </Item>\r\n        <Item>\r\n          <ComponentCity />\r\n        </Item>\r\n        <Item>\r\n          <ComponentSalary />\r\n        </Item>\r\n        <Item>\r\n          <ComponentExperience />\r\n        </Item>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { setUserActiveResume } from '../../redux/actions/auth';\r\nimport { Avatar, Checkbox } from 'antd';\r\n\r\nconst Wrapper = styled.div``;\r\nconst List = styled.ul`\r\n  padding: 0;\r\n`;\r\nconst Item = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  cursor: pointer;\r\n  padding: 8px;\r\n  background-color: ${({ isActive }) => (isActive ? '#f9fafb' : null)};\r\n\r\n  &:hover {\r\n    background-color: #e4e6ef;\r\n  }\r\n`;\r\n\r\nconst Info = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin: 0 0 0 16px;\r\n`;\r\n\r\nexport const ListResume = ({ resume }) => {\r\n  const { activeResume } = useSelector((state) => state.reducerAuth);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChangeActiveResume = (currentResume) => {\r\n    dispatch(setUserActiveResume({ activeResume: currentResume }));\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <List>\r\n        {resume.map((item) => (\r\n          <Item\r\n            key={item.id}\r\n            isActive={activeResume.id === item.id}\r\n            onClick={() => handleChangeActiveResume(item)}\r\n          >\r\n            <Info>\r\n              <Avatar shape=\"circle\" src={item.photo['100']} size=\"large\" />\r\n              <Title>{item.title}</Title>\r\n            </Info>\r\n            <Checkbox checked={activeResume.id === item.id} />\r\n          </Item>\r\n        ))}\r\n      </List>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setIsOpenModalResume } from '../../redux/actions/utils';\r\n\r\nimport { Button, Modal } from 'antd';\r\nimport { ListResume } from './ListResume';\r\n\r\nexport const ModalResume = () => {\r\n  const dispatch = useDispatch();\r\n  const { isOpenModalResume } = useSelector((state) => state.reducerUtils);\r\n  const { resume } = useSelector((state) => state.reducerAuth);\r\n\r\n  const toggleSettings = () => {\r\n    dispatch(setIsOpenModalResume({ isOpenModalResume: false }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Ваши резюме\"\r\n        visible={isOpenModalResume}\r\n        centered={true}\r\n        onCancel={toggleSettings}\r\n        footer={[\r\n          <Button key=\"back\" onClick={toggleSettings}>\r\n            Назад\r\n          </Button>,\r\n        ]}\r\n      >\r\n        {resume ? (\r\n          <ListResume resume={resume.items} />\r\n        ) : (\r\n          'Вам нужно авторизироваться, что бы видеть ваши резюме.'\r\n        )}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Spin } from 'antd';\r\n\r\nconst WrapperSpin = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n`;\r\n\r\nexport const DataIsLoaded = ({ children, isLoading }) => {\r\n  if (isLoading)\r\n    return (\r\n      <WrapperSpin>\r\n        <Spin size=\"large\" />\r\n      </WrapperSpin>\r\n    );\r\n  return children;\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Sidebar } from './sidebar/Sidebar';\r\nimport { List } from './vacancies/List';\r\nimport { ModalSearch } from './search/ModalSearch';\r\nimport { ModalResume } from './sidebar/ModalResume';\r\nimport { DataIsLoaded } from './Loader';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: calc(100% - 100px);\r\n  display: flex;\r\n  align-items: flex-start;\r\n`;\r\n\r\nexport const Content = () => {\r\n  const { isLoadingData } = useSelector((state) => state.reducerVacancies);\r\n  return (\r\n    <Wrapper>\r\n      <Sidebar />\r\n      <DataIsLoaded isLoading={isLoadingData}>\r\n        <List />\r\n      </DataIsLoaded>\r\n      <ModalSearch />\r\n      <ModalResume />\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { changePage } from '../redux/actions/utils';\r\nimport { Pagination, Divider } from 'antd';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin: 0;\r\n`;\r\n\r\nconst PaginationApp = styled(Pagination)`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Footer = () => {\r\n  const dispatch = useDispatch();\r\n  const { snippetVacancies } = useSelector((state) => state.reducerVacancies);\r\n  const { countItemsOnPage, currentPage } = useSelector(\r\n    (state) => state.reducerUtils\r\n  );\r\n\r\n  const onChange = (currentPage) => {\r\n    dispatch(changePage({ currentPage }));\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <Divider>\r\n        {snippetVacancies.length !== 0 ? (\r\n          <PaginationApp\r\n            defaultCurrent={1}\r\n            current={currentPage}\r\n            showSizeChanger={false}\r\n            // Оторбражаем не больше 2000 вакансий\r\n            total={\r\n              snippetVacancies.found > 1999\r\n                ? 1999 - countItemsOnPage\r\n                : snippetVacancies.found\r\n            }\r\n            pageSize={countItemsOnPage}\r\n            onChange={onChange}\r\n          />\r\n        ) : (\r\n          <Title>HeadHunter</Title>\r\n        )}\r\n      </Divider>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport queries from './api/index';\r\n\r\nimport {\r\n  checkAuthUserApi,\r\n  fetchUserInfoApi,\r\n  fetchUserResumeApi,\r\n} from './redux/actions/auth';\r\nimport { Header } from './components/Header';\r\nimport { Content } from './components/Content';\r\nimport { Footer } from './components/Footer';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  box-sizing: border-box;\r\n  padding: 0 16px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const { accessToken } = useSelector((state) => state.reducerAuth);\r\n\r\n  /* Проверяем авторизовался ли user */\r\n  useEffect(() => {\r\n    if (!accessToken) {\r\n      dispatch(checkAuthUserApi());\r\n    } else {\r\n      dispatch(fetchUserInfoApi({ accessToken }));\r\n      dispatch(fetchUserResumeApi({ accessToken }));\r\n    }\r\n\r\n    return () => queries.disconnect();\r\n  }, [accessToken]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Header />\r\n      <Content />\r\n      <Footer />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { handleActions } from 'redux-actions';\r\nimport {\r\n  fetchSnippetVacanciesRequest,\r\n  fetchSnippetVacanciesSuccess,\r\n  fetchSnippetVacanciesFailure,\r\n  fetchFullVacanciesRequest,\r\n  fetchFullVacanciesSuccess,\r\n  fetchFullVacanciesFailure,\r\n} from '../actions/vacancies';\r\n\r\nconst initState = {\r\n  fullVacancies: [\r\n    {\r\n      id: 0,\r\n      name: 'Вакансий не найдено',\r\n      published_at: '2020-07-09T09:19:54+0300',\r\n      experience: { name: '1' },\r\n    },\r\n  ],\r\n  snippetVacancies: [],\r\n  isLoadingData: false,\r\n};\r\n\r\nexport const reducerVacancies = handleActions(\r\n  {\r\n    /* SNIPPETS VACANCIES */\r\n\r\n    [fetchSnippetVacanciesRequest]: (state, { payload: { isLoadingData } }) => {\r\n      return { ...state, isLoadingData };\r\n    },\r\n    [fetchSnippetVacanciesSuccess]: (\r\n      state,\r\n      { payload: { snippetVacancies, isLoadingData } }\r\n    ) => {\r\n      return { ...state, snippetVacancies, isLoadingData };\r\n    },\r\n    [fetchSnippetVacanciesFailure]: (state, { payload: { isLoadingData } }) => {\r\n      return { ...state, isLoadingData };\r\n    },\r\n\r\n    /* FULL VACANCIES */\r\n\r\n    [fetchFullVacanciesRequest]: (state, { payload: { isLoadingData } }) => {\r\n      return { ...state, isLoadingData };\r\n    },\r\n    [fetchFullVacanciesSuccess]: (\r\n      state,\r\n      { payload: { fullVacancies, isLoadingData } }\r\n    ) => {\r\n      return { ...state, fullVacancies, isLoadingData };\r\n    },\r\n    [fetchFullVacanciesFailure]: (state, { payload: { isLoadingData } }) => {\r\n      return { ...state, isLoadingData };\r\n    },\r\n  },\r\n  initState\r\n);\r\n","import { handleActions } from 'redux-actions';\r\nimport {\r\n  changePage,\r\n  setIsOpenModalSearch,\r\n  setIsOpenModalResume,\r\n  setCountItemsOnPage,\r\n  setFirstLoaded,\r\n  toggleOpenAlertResume,\r\n} from '../actions/utils';\r\n\r\nconst initState = {\r\n  currentPage: 1,\r\n  countItemsOnPage: 10,\r\n  isOpenModalSearch: true,\r\n  isOpenModalResume: false,\r\n  isOpenAlertResume: false,\r\n  firstLoaded: false,\r\n};\r\n\r\nexport const reducerUtils = handleActions(\r\n  {\r\n    [changePage]: (state, { payload: { currentPage } }) => {\r\n      return { ...state, currentPage };\r\n    },\r\n    [setCountItemsOnPage]: (state, { payload: { count } }) => {\r\n      return { ...state, countItemsOnPage: count };\r\n    },\r\n    [setIsOpenModalSearch]: (state, { payload: { isOpenModalSearch } }) => {\r\n      return { ...state, isOpenModalSearch };\r\n    },\r\n    [setIsOpenModalResume]: (state, { payload: { isOpenModalResume } }) => {\r\n      return { ...state, isOpenModalResume };\r\n    },\r\n    [setFirstLoaded]: (state, { payload: { firstLoadedApp } }) => {\r\n      return { ...state, firstLoadedApp };\r\n    },\r\n    [toggleOpenAlertResume]: (state, { payload: { isOpenAlertResume } }) => {\r\n      return { ...state, isOpenAlertResume };\r\n    },\r\n  },\r\n  initState\r\n);\r\n","import { handleActions } from 'redux-actions';\r\nimport {\r\n  setAccessToken,\r\n  setUserInfo,\r\n  setUserResume,\r\n  setUserActiveResume,\r\n} from '../actions/auth';\r\n\r\nconst initState = {\r\n  accessToken: null,\r\n  isAuth: false,\r\n  userInfo: {},\r\n  resume: null,\r\n  activeResume: null,\r\n};\r\n\r\nexport const reducerAuth = handleActions(\r\n  {\r\n    [setAccessToken]: (state, { payload: { accessToken } }) => {\r\n      return { ...state, accessToken };\r\n    },\r\n    [setUserInfo]: (state, { payload: { userInfo, isAuth } }) => {\r\n      return { ...state, userInfo, isAuth };\r\n    },\r\n    [setUserResume]: (state, { payload: { resume } }) => {\r\n      return { ...state, resume };\r\n    },\r\n    [setUserActiveResume]: (state, { payload: { activeResume } }) => {\r\n      return { ...state, activeResume };\r\n    },\r\n  },\r\n  initState\r\n);\r\n","import { handleActions } from 'redux-actions';\r\nimport {\r\n  changeExperience,\r\n  changeCity,\r\n  changeSalary,\r\n} from '../actions/userInfo';\r\n\r\nconst initState = {\r\n  experience: 1,\r\n  city: { title: 'Москва', areaId: 1 },\r\n  salary: null,\r\n};\r\n\r\nexport const reducerUserInfo = handleActions(\r\n  {\r\n    [changeCity]: (state, { payload: { city } }) => {\r\n      return { ...state, city };\r\n    },\r\n    [changeExperience]: (state, { payload: { experience } }) => {\r\n      return { ...state, experience };\r\n    },\r\n    [changeSalary]: (state, { payload: { salary } }) => {\r\n      return { ...state, salary };\r\n    },\r\n  },\r\n  initState\r\n);\r\n","import { combineReducers } from 'redux';\r\n\r\nimport { reducerVacancies } from './reducers/vacancies';\r\nimport { reducerUtils } from './reducers/utils';\r\nimport { reducerAuth } from './reducers/auth';\r\nimport { reducerUserInfo } from './reducers/userInfo';\r\n\r\nexport const rootReducer = combineReducers({\r\n  reducerVacancies,\r\n  reducerUtils,\r\n  reducerAuth,\r\n  reducerUserInfo,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { rootReducer } from './rootReducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst initialState = {};\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}